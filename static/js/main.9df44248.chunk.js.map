{"version":3,"sources":["images/arrow.svg","services/api.js","context/CurrencyContext.jsx","components/Converter.jsx","components/Graph.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","getExchange","a","fetch","call","result","json","getExchangeValue","value1","value2","getExchangeValueWithEuro","getExchangeRateData","tenDaysAgo","today","CurrencyContext","createContext","CurrencyProvider","children","useState","select1","setSelect1","context","select2","setSelect2","Provider","value","changeFontSize","input","setFontClass","console","log","length","sortAlphabetically","array","sort","b","Converter","useContext","exchange1","setExchange1","exchange2","setExchange2","setValue1","setValue2","exchangeResult","setExchangeResult","rate1","setRate1","rate2","setRate2","fontClass","useValue","setUseValue","useEffect","toFixed","then","data","Object","keys","rates","className","onChange","e","target","map","getSymbolFromCurrency","maxLength","placeholder","src","arrow","width","Graph","setData","currency","convert","finalDate","Date","getFullYear","getMonth","getDate","initDate","setDate","initialDate","setInitialDate","endDate","setFinalDate","pickedDate","setPickedDate","window","innerWidth","size","setSize","dataArray","orderedDates","entries","arrayOfData","slice","getArrayOfData","addEventListener","type","date","i","f","getDates","height","chartType","loader","options","title","hAxis","viewWindowMode","chartArea","left","right","backgroundColor","onmouseover","animation","startup","duration","easing","colors","crosshair","color","fontName","legend","position","lineWidth","fontsize","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9df44248.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow.5df55aa2.svg\";","const getExchange = async () => {\n  const call = await fetch('https://api.exchangeratesapi.io/latest');\n  const result = call.json();\n  return result;\n};\n\nconst getExchangeValue = async (value1, value2) => {\n  const call = await fetch(`https://api.exchangeratesapi.io/latest?symbols=${value1},${value2}`);\n  const result = call.json();\n  return result;\n};\n\nconst getExchangeValueWithEuro = async () => {\n  const call = await fetch('https://api.exchangeratesapi.io/latest');\n  const result = call.json();\n  return result;\n};\n\nconst getExchangeRateData = async (tenDaysAgo, today, value2) => {\n  const call = await fetch(`https://api.exchangeratesapi.io/history?start_at=${tenDaysAgo}&end_at=${today}&base=${value2}`);\n  const result = call.json();\n  return result;\n};\n\nexport {\n  getExchange, getExchangeValue, getExchangeValueWithEuro, getExchangeRateData,\n};\n","import React, { createContext, useState } from 'react';\n\nexport const CurrencyContext = createContext();\n\nfunction CurrencyProvider({ children }) {\n  const [select1, setSelect1] = useState('EUR');\n  const [select2, setSelect2] = useState('USD');\n  const context = {\n    select1,\n    select2,\n    setSelect1,\n    setSelect2,\n  };\n  return (\n    <CurrencyContext.Provider value={context}>\n      {children}\n    </CurrencyContext.Provider>\n  );\n}\n\nexport default CurrencyProvider;\n","import React, { useState, useEffect, useContext } from 'react';\nimport getSymbolFromCurrency from 'currency-symbol-map';\nimport { getExchange, getExchangeValue, getExchangeValueWithEuro } from '../services/api';\nimport { CurrencyContext } from '../context/CurrencyContext';\nimport '../App.css';\nimport arrow from '../images/arrow.svg';\n\nfunction changeFontSize(input, setFontClass) {\n  console.log(input.length)\n  if (input.length > 9) {\n    setFontClass('small-input');\n  }\n  if (input.length > 14) {\n    setFontClass('smaller-input')\n  }\n}\n\nfunction sortAlphabetically(array) {\n  array.sort((a, b) => {\n    if (a > b) return 1;\n    if (a < b) return -1;\n    return 0;\n  });\n}\n\nfunction Converter() {\n  const {\n    select1, setSelect1, select2, setSelect2,\n  } = useContext(CurrencyContext);\n\n  const [exchange1, setExchange1] = useState([]);\n  const [exchange2, setExchange2] = useState([]);\n  const [value1, setValue1] = useState('');\n  const [value2, setValue2] = useState('');\n  const [exchangeResult, setExchangeResult] = useState('');\n  const [rate1, setRate1] = useState(1);\n  const [rate2, setRate2] = useState(1);\n  const [fontClass, setFontClass] = useState('normal-input')\n  const [useValue, setUseValue] = useState(true);\n  sortAlphabetically(exchange1);\n  sortAlphabetically(exchange2);\n\n  useEffect(() => {\n    if (useValue && value1 !== '') {\n      setExchangeResult(((value1 / rate1) * rate2).toFixed(2));\n    }\n    if (!useValue && value2 !== '') {\n      setExchangeResult(((value2 / rate2) * rate1).toFixed(2));\n    }\n\n    if ((value1 === '' && useValue) || (value2 === '' && !useValue)) {\n      setExchangeResult('');\n    }\n\n    getExchange().then((data) => {\n      setExchange1(['EUR', ...Object.keys(data.rates)]);\n      setExchange2(['EUR', ...Object.keys(data.rates)]);\n    });\n\n    if (select1 !== 'EUR' && select2 !== 'EUR') {\n      getExchangeValue(select1, select2)\n        .then((data) => {\n          setRate1(data.rates[select1]);\n          setRate2(data.rates[select2]);\n        });\n    }\n\n    if (select1 === 'EUR' && select2 === 'EUR') {\n      setRate1(1);\n      setRate2(1);\n    }\n\n    if (select1 === 'EUR' && select2 !== 'EUR') {\n      getExchangeValueWithEuro()\n        .then((data) => {\n          setRate1(1);\n          setRate2(data.rates[select2]);\n        });\n    }\n\n    if (select2 === 'EUR' && select1 !== 'EUR') {\n      getExchangeValueWithEuro()\n        .then((data) => {\n          setRate2(1);\n          setRate1(data.rates[select1]);\n        });\n    }\n  }, [select1, select2, rate1, rate2, value1, value2]);\n  return (\n    <div className=\"main\">\n      <div className=\"currency-left\">\n        <select\n          onChange={(e) => setSelect1(e.target.value)}\n          value={select1}\n        >\n          {exchange1.map((e) => <option>{e}</option>)}\n        </select>\n        <p>{getSymbolFromCurrency(select1)}</p>\n        <input\n          maxLength=\"30\"\n          className={fontClass}\n          placeholder=\"Amount\"\n          onChange={(e) => {\n            changeFontSize(e.target.value, setFontClass);\n            setValue1(e.target.value);\n            setUseValue(true);\n          }}\n          value={useValue ? value1 : exchangeResult}\n        />\n        <div>{`1 ${select1} = ${(rate2 / rate1).toFixed(5)} ${select2}`}</div>\n      </div>\n      <div className=\"currency-right\">\n        <select\n          onChange={(e) => setSelect2(e.target.value)}\n          value={select2}\n        >\n          {exchange2.map((e) => <option>{e}</option>)}\n        </select>\n        <p>{getSymbolFromCurrency(select2)}</p>\n        <input\n          className={fontClass}\n          maxLength=\"30\"\n          placeholder=\"Amount\"\n          onChange={(e) => {\n            changeFontSize(e.target.value, setFontClass);\n            setValue2(e.target.value);\n            setUseValue(false);\n          }}\n          value={useValue ? exchangeResult : value2}\n        />\n        <div>{`1 ${select2} = ${(rate1 / rate2).toFixed(5)} ${select1}`}</div>\n      </div>\n      <img src={arrow} width=\"30px\" />\n      {/* <button onClick={() => { setValue1(''); setUseValue(true); setExchangeResult(''); setValue2(''); setSelect1('EUR'); setSelect2('EUR'); }} type=\"button\">RESET</button> */}\n    </div>\n  );\n}\n\nexport default Converter;\n","import React, { useEffect, useState, useContext } from 'react';\nimport Chart from 'react-google-charts';\nimport { getExchangeRateData } from '../services/api';\nimport { CurrencyContext } from '../context/CurrencyContext';\n\nfunction sortDates(array) {\n  array.sort((a, b) => {\n    if (a[0] > b[0]) return 1;\n    if (a[0] < b[0]) return -1;\n    return 0;\n  });\n  return array;\n}\n\nfunction getArrayOfData(data, convert) {\n  const orderedDates = sortDates((Object.entries(data)));\n  let arrayOfData = [];\n  if (orderedDates.length > 0) {\n    arrayOfData = orderedDates.map((e) => [`${(e[0]).slice(8, 11)}/${(e[0]).slice(5, 7)}`, e[1][convert]]);\n  }\n  const graphData = arrayOfData.map((e) => [e[0], e[1]]);\n  return graphData;\n}\n\nfunction getDates(date, setPickedDate, setInitialDate, setFinalDate) {\n  const i = new Date(date);\n  i.setDate(i.getDate() + 1);\n  const initialDate = `${i.getFullYear()}-${i.getMonth() + 1}-${i.getDate()}`;\n  setInitialDate(initialDate);\n  const f = new Date(date);\n  f.setDate(f.getDate() - 10);\n  const finalDate = `${f.getFullYear()}-${f.getMonth() + 1}-${f.getDate()}`;\n  setFinalDate(finalDate);\n  setPickedDate(date);\n}\n\nfunction Graph() {\n  const { select1, select2 } = useContext(CurrencyContext);\n  const [data, setData] = useState([]);\n  const currency = select1;\n  const convert = select2;\n\n  const finalDate = new Date();\n  const today = `${finalDate.getFullYear()}-${finalDate.getMonth() + 1}-${finalDate.getDate()}`;\n  const initDate = new Date();\n  initDate.setDate(initDate.getDate() - 10);\n  const tenDaysAgo = `${initDate.getFullYear()}-${initDate.getMonth() + 1}-${initDate.getDate()}`;\n  const [initialDate, setInitialDate] = useState(today);\n  const [endDate, setFinalDate] = useState(tenDaysAgo);\n  const [pickedDate, setPickedDate] = useState(today);\n  const [size, setSize] = useState(window.innerWidth);\n\n  const dataArray = [['Ano', 'Rate'], ...getArrayOfData(data, convert)];\n\n  useEffect(() => {\n    getExchangeRateData(endDate, initialDate, currency).then((result) => {\n      setData(result.rates);\n    });\n    window.addEventListener('resize', () => setSize(window.innerWidth));\n    // console.log(size)\n  }, [currency, pickedDate]);\n\n  return (\n    <div className=\"graph\">\n      <p>Pick a date</p>\n      <input type=\"date\" className=\"date-picker\" onChange={(e) => getDates(e.target.value, setPickedDate, setInitialDate, setFinalDate)} value={pickedDate} />\n      <div className=\"chart\">\n        <Chart\n          height=\"350px\"\n          chartType=\"AreaChart\"\n          loader={<div>Loading Chart</div>}\n          data={dataArray}\n          options={{\n            title: `Currency Rate: ${currency} to ${convert}`,\n            hAxis: { title: 'Date', viewWindowMode: 'pretty' },\n            // For the legend to fit, we make the chart area smaller\n            chartArea: { width: '100%', height: '70%', left: '80', right: '80' },\n            backgroundColor: '#F7F7F9',\n            onmouseover: 'row',\n            animation: { startup: true, duration: 500, easing: 'inandout' },\n            colors: ['#452B4E', '#E9EDFD'],\n            crosshair: { color: '#452B4E' },\n            fontName: 'Quicksand',\n            legend: { position: 'none' },\n            lineWidth: 3,\n            fontsize: 30,\n            width: size * 0.8,\n            // lineWidth: 25\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Graph;\n","import React from 'react';\nimport Converter from './components/Converter';\nimport Graph from './components/Graph';\nimport CurrencyProvider from './context/CurrencyContext';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <CurrencyProvider>\n        <div className=\"back-color\">\n          <div className=\"front-color\">\n            <p>Exchange</p>\n            <Converter />\n            <Graph />\n          </div>\n        </div>\n      </CurrencyProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}